%!PS-Adobe-2.0
%%Title: inverted_pendulum_config.eps
%%Creator: gnuplot 6.0 patchlevel 0
%%CreationDate: Fri Oct 17 17:53:25 2025
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (inverted_pendulum_config.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 6.0 patchlevel 0)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Oct 17 17:53:25 2025)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
686 448 M
63 0 V
6198 0 R
-63 0 V
stroke
602 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.4)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
686 1084 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1084 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.6)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 1720 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1720 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.8)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 2356 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2356 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 2991 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2991 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.2)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 3627 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3627 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.4)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 4263 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4263 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.6)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 4899 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.8)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 448 M
0 63 V
0 4388 R
0 -63 V
stroke
686 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.05)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1312 448 M
0 63 V
0 4388 R
0 -63 V
stroke
1312 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.04)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1938 448 M
0 63 V
0 4388 R
0 -63 V
stroke
1938 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.03)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2564 448 M
0 63 V
0 4388 R
0 -63 V
stroke
2564 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.02)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3190 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3190 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.01)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3817 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3817 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4443 448 M
0 63 V
0 4388 R
0 -63 V
stroke
4443 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5069 448 M
0 63 V
0 4388 R
0 -63 V
stroke
5069 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.02)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5695 448 M
0 63 V
0 4388 R
0 -63 V
stroke
5695 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.03)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6321 448 M
0 63 V
0 4388 R
0 -63 V
stroke
6321 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.04)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 63 V
0 4388 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.05)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 4899 N
686 448 L
6261 0 V
0 4451 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UL
LTb
0.00 0.00 1.00 C
4449 2838 M
-1265 0 V
0 -64 V
1265 0 V
0 64 V
6 0 R
-1277 0 V
0 -65 V
1277 0 V
0 65 V
7 1 R
-1290 0 V
-1 0 V
0 -66 V
1290 0 V
1 0 V
0 66 V
6 0 R
-1302 0 V
-1 0 V
0 -67 V
1302 0 V
1 0 V
0 67 V
7 1 R
-1315 0 V
-2 0 V
0 -69 V
1315 0 V
2 1 V
0 68 V
6 1 R
-1327 0 V
-2 0 V
0 -70 V
1327 0 V
2 0 V
0 70 V
7 0 R
-1340 0 V
-3 0 V
0 -71 V
1340 0 V
3 0 V
0 71 V
7 1 R
-1353 0 V
-4 0 V
0 -73 V
1353 0 V
4 0 V
0 73 V
6 1 R
-1364 0 V
-5 0 V
0 -75 V
1364 0 V
5 0 V
0 75 V
7 1 R
-1377 0 V
-6 0 V
0 -77 V
1377 0 V
6 0 V
0 77 V
7 1 R
-1390 0 V
-7 0 V
0 -79 V
1390 0 V
7 0 V
0 79 V
7 2 R
-1402 0 V
-9 -1 V
0 -81 V
1402 0 V
9 0 V
0 82 V
7 1 R
-1415 0 V
-10 -1 V
0 -83 V
1415 0 V
10 0 V
0 84 V
8 1 R
-1428 0 V
-13 0 V
0 -87 V
1428 0 V
13 1 V
0 86 V
7 2 R
-1440 0 V
-15 -1 V
0 -89 V
1440 0 V
15 0 V
0 90 V
7 1 R
-1453 0 V
-16 -1 V
0 -92 V
1453 0 V
16 1 V
0 92 V
8 2 R
-1466 0 V
-19 -1 V
0 -95 V
1466 0 V
19 0 V
0 96 V
7 2 R
-1478 0 V
-21 -1 V
0 -99 V
1478 0 V
21 1 V
0 99 V
8 2 R
-1490 0 V
-25 -2 V
0 -102 V
1490 0 V
25 1 V
0 103 V
7 2 R
-1502 0 V
-27 -2 V
0 -106 V
1502 0 V
27 1 V
0 107 V
8 2 R
-1515 0 V
-30 -2 V
0 -110 V
1515 0 V
30 1 V
0 111 V
8 2 R
-1527 0 V
-34 -2 V
0 -114 V
1527 0 V
34 1 V
0 115 V
8 2 R
-1540 0 V
-37 -2 V
0 -119 V
1540 0 V
37 2 V
0 119 V
9 3 R
-1553 0 V
-42 -2 V
0 -124 V
1553 0 V
42 2 V
0 124 V
8 2 R
-1565 0 V
-46 -2 V
0 -129 V
1565 0 V
46 2 V
0 129 V
8 3 R
-1577 0 V
-50 -2 V
0 -135 V
1577 0 V
50 3 V
0 134 V
9 3 R
-1590 0 V
-55 -3 V
0 -140 V
1590 0 V
55 3 V
0 140 V
9 3 R
-1603 0 V
-60 -3 V
0 -146 V
1603 0 V
60 3 V
0 146 V
8 3 R
-1615 0 V
-64 -3 V
0 -152 V
1615 0 V
64 3 V
0 152 V
9 4 R
-1627 0 V
-71 -4 V
0 -158 V
1628 0 V
70 3 V
0 159 V
10 3 R
-1641 0 V
-76 -4 V
0 -165 V
1641 0 V
76 4 V
0 165 V
9 4 R
-1653 0 V
-82 -4 V
0 -173 V
1653 0 V
82 5 V
0 172 V
9 4 R
-1665 0 V
-88 -5 V
0 -179 V
1665 0 V
88 4 V
0 180 V
10 4 R
-1678 0 V
-95 -5 V
0 -188 V
1678 0 V
95 5 V
0 188 V
10 4 R
-1690 0 V
-103 -5 V
0 -196 V
1690 0 V
103 5 V
0 196 V
10 5 R
-1703 0 V
-110 -6 V
0 -205 V
1703 0 V
110 6 V
0 205 V
10 5 R
-1715 0 V
stroke 3018 2916 M
-118 -6 V
0 -214 V
1715 0 V
118 6 V
0 214 V
11 5 R
-1728 0 V
-127 -7 V
0 -223 V
1728 0 V
127 6 V
0 224 V
10 5 R
-1740 0 V
-136 -7 V
0 -234 V
1741 0 V
135 7 V
0 234 V
11 6 R
-1753 0 V
-144 -8 V
0 -244 V
1753 0 V
144 7 V
0 245 V
12 5 R
-1766 0 V
-155 -8 V
0 -255 V
1766 0 V
155 8 V
0 255 V
11 6 R
-1778 0 V
-165 -8 V
0 -267 V
1778 0 V
165 8 V
0 267 V
12 7 R
-1791 0 V
-176 -9 V
0 -279 V
1791 0 V
176 9 V
0 279 V
12 6 R
-1804 0 V
-187 -9 V
0 -292 V
1803 0 V
188 9 V
0 292 V
12 8 R
-1816 0 V
-199 -11 V
0 -305 V
1816 0 V
199 10 V
0 306 V
12 7 R
-1828 0 V
-212 -11 V
0 -319 V
1829 0 V
211 10 V
0 320 V
13 8 R
-1840 0 V
-225 -12 V
0 -334 V
1840 0 V
225 11 V
0 335 V
14 8 R
-1854 0 V
-239 -12 V
0 -350 V
1854 0 V
239 12 V
0 350 V
13 8 R
-1866 0 V
-253 -13 V
0 -366 V
1866 0 V
253 13 V
0 366 V
14 9 R
-1878 0 V
-269 -14 V
0 -383 V
1878 0 V
269 14 V
0 383 V
14 9 R
-1890 0 V
-285 -14 V
0 -401 V
1890 0 V
285 14 V
0 401 V
15 10 R
-1903 0 V
-302 -15 V
0 -420 V
1903 0 V
302 16 V
0 419 V
15 10 R
-1916 0 V
-319 -16 V
0 -439 V
1916 0 V
319 16 V
0 439 V
16 11 R
-1929 0 V
-338 -17 V
0 -460 V
1928 0 V
339 17 V
0 460 V
16 11 R
-1941 0 V
-358 -18 V
0 -481 V
1941 0 V
358 18 V
0 481 V
16 12 R
-1953 0 V
-379 -19 V
0 -504 V
1954 0 V
378 19 V
0 504 V
17 12 R
-1966 0 V
-400 -20 V
0 -527 V
1966 0 V
400 20 V
0 527 V
18 13 R
-1979 0 V
-422 -21 V
0 -552 V
1978 0 V
423 21 V
0 552 V
18 14 R
-1991 0 V
-446 -23 V
0 -578 V
1991 0 V
446 23 V
0 578 V
19 14 R
-2004 0 V
-471 -24 V
0 -605 V
2004 0 V
471 24 V
0 605 V
19 15 R
-2016 0 V
-497 -25 V
0 -634 V
2016 0 V
497 26 V
0 633 V
20 16 R
-2029 0 V
-524 -27 V
0 -663 V
2029 0 V
524 26 V
0 664 V
21 16 R
-2042 0 V
-553 -28 V
0 -695 V
2041 0 V
554 28 V
0 695 V
21 17 R
-2054 0 V
-583 -30 V
0 -727 V
2054 0 V
583 30 V
0 727 V
22 18 R
-2066 0 V
-615 -31 V
0 -762 V
2066 0 V
615 32 V
0 761 V
23 19 R
-2079 0 V
-648 -33 V
0 -798 V
2079 0 V
648 33 V
0 798 V
24 20 R
-2092 0 V
-683 -35 V
0 -835 V
2092 0 V
683 34 V
0 836 V
24 20 R
-2104 0 V
-719 -36 V
0 -875 V
2104 0 V
719 37 V
0 874 V
26 22 R
-2117 0 V
-758 -39 V
0 -916 V
2117 0 V
758 39 V
0 916 V
26 22 R
-2129 0 V
-798 -40 V
0 -959 V
2129 0 V
798 40 V
0 959 V
27 24 R
-2142 0 V
-839 -42 V
0 -1005 V
2142 0 V
839 43 V
0 1004 V
29 25 R
-2155 0 V
-884 -45 V
0 -1052 V
2155 0 V
884 45 V
stroke 5336 2302 M
0 1052 V
29 26 R
-2166 0 V
-932 -47 V
0 -1102 V
2167 0 V
931 47 V
0 1102 V
31 27 R
-2179 0 V
-980 -49 V
0 -1154 V
2179 0 V
980 50 V
0 1153 V
32 29 R
-2192 0 V
2204 3384 L
0 -1209 V
2193 0 V
1031 52 V
0 1209 V
34 30 R
-2206 0 V
2171 3411 L
0 -1266 V
2205 0 V
1086 55 V
0 1266 V
35 32 R
-2217 0 V
2136 3440 L
0 -1327 V
2217 0 V
1144 59 V
0 1326 V
36 33 R
-2230 0 V
2100 3470 L
0 -1390 V
2229 0 V
1204 61 V
0 1390 V
38 35 R
-2242 0 V
2062 3501 L
0 -1455 V
2242 0 V
1267 64 V
0 1456 V
39 36 R
-2254 0 V
2022 3534 L
0 -1525 V
2255 0 V
1333 68 V
0 1525 V
41 38 R
-2267 0 V
1981 3569 L
0 -1598 V
2268 0 V
1402 71 V
0 1598 V
43 40 R
-2280 0 V
1938 3605 L
0 -1674 V
2280 0 V
1476 75 V
0 1674 V
45 42 R
-2292 0 V
1893 3643 L
0 -1754 V
2293 0 V
1553 79 V
0 1754 V
48 44 R
-2306 0 V
1846 3683 L
0 -1838 V
2306 0 V
1635 83 V
0 1838 V
49 46 R
-2319 0 V
1797 3725 L
0 -1926 V
2318 0 V
1721 87 V
0 1926 V
51 49 R
-2331 0 V
1745 3769 L
0 -2019 V
2331 0 V
1811 92 V
0 2019 V
55 51 R
-2345 0 V
1691 3815 L
0 -2116 V
2344 0 V
1907 97 V
0 2116 V
57 53 R
-2358 0 V
1634 3863 L
0 -2217 V
2358 0 V
2007 102 V
0 2217 V
59 56 R
-2371 0 V
1574 3914 L
0 -2325 V
2372 0 V
2112 108 V
0 2324 V
63 59 R
-2385 0 V
1511 3967 L
0 -2437 V
2386 0 V
2224 113 V
0 2437 V
67 62 R
-2400 0 V
1445 4023 L
0 -2555 V
2400 0 V
2343 119 V
0 2555 V
70 66 R
-2415 0 V
1375 4082 L
0 -2679 V
2415 0 V
2468 126 V
0 2679 V
74 68 R
-2431 0 V
1301 4144 L
0 -2809 V
2430 0 V
2601 132 V
0 2809 V
78 72 R
-2441 0 V
1222 4209 L
0 -2946 V
2441 0 V
2747 139 V
0 2946 V
83 76 R
-2456 0 V
1139 4277 L
0 -3090 V
2457 0 V
2897 147 V
0 3090 V
88 80 R
-2473 0 V
1051 4349 L
0 -3242 V
2473 0 V
3057 155 V
0 3242 V
94 84 R
-2490 0 V
958 4425 L
0 -3403 V
2490 0 V
3227 164 V
0 3402 V
99 89 R
-2508 0 V
858 4504 L
858 933 L
2509 0 V
3407 173 V
0 3571 V
107 94 R
-2529 0 V
751 4588 L
751 839 L
2530 0 V
3600 183 V
0 3749 V
% End plot #1
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 4899 N
686 448 L
6261 0 V
0 4451 V
-6261 0 V
Z stroke
LCb setrgbcolor
133 2673 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (theta)]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3816 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (x)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
